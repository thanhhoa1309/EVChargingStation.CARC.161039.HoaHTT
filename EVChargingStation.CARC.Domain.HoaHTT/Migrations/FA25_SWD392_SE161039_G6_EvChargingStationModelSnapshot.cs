// <auto-generated />
using System;
using EVChargingStation.CARC.Domain.HoaHTT;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace EVChargingStation.CARC.Domain.HoaHTT.Migrations
{
    [DbContext(typeof(FA25_SWD392_SE161039_G6_EvChargingStation))]
    partial class FA25_SWD392_SE161039_G6_EvChargingStationModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("EVChargingStation.CARC.Domain.LongLQ.Entities.Connector", b =>
                {
                    b.Property<Guid>("HoaHTTID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("ConnectorType")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<decimal>("PowerKw")
                        .HasColumnType("numeric");

                    b.Property<decimal>("PricePerKwh")
                        .HasColumnType("numeric");

                    b.Property<Guid>("StationAnhDHVId")
                        .HasColumnType("uuid");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uuid");

                    b.HasKey("HoaHTTID");

                    b.HasIndex("StationAnhDHVId");

                    b.ToTable("Connectors");
                });

            modelBuilder.Entity("EVChargingStation.CARC.Domain.LongLQ.Entities.InvoiceTruongNN", b =>
                {
                    b.Property<Guid>("HoaHTTID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<decimal>("AmountPaid")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DueDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("IssuedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("PeriodEnd")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("PeriodStart")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("SessionId")
                        .HasColumnType("uuid");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<decimal>("SubtotalAmount")
                        .HasColumnType("numeric");

                    b.Property<decimal>("TaxAmount")
                        .HasColumnType("numeric");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("numeric");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("HoaHTTID");

                    b.HasIndex("UserId");

                    b.ToTable("InvoiceTruongNN");
                });

            modelBuilder.Entity("EVChargingStation.CARC.Domain.LongLQ.Entities.Location", b =>
                {
                    b.Property<Guid>("HoaHTTID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("City")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Country")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<decimal>("Latitude")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Longitude")
                        .HasColumnType("numeric");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("StateProvince")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Timezone")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uuid");

                    b.HasKey("HoaHTTID");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("EVChargingStation.CARC.Domain.LongLQ.Entities.Payment", b =>
                {
                    b.Property<Guid>("HoaHTTID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("InvoiceTruongNNId")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Note")
                        .HasColumnType("text");

                    b.Property<Guid?>("SessionId")
                        .HasColumnType("uuid");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("HoaHTTID");

                    b.HasIndex("InvoiceTruongNNId");

                    b.HasIndex("SessionId");

                    b.HasIndex("UserId");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("EVChargingStation.CARC.Domain.LongLQ.Entities.Plan", b =>
                {
                    b.Property<Guid>("HoaHTTID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<decimal?>("MaxDailyKwh")
                        .HasColumnType("numeric");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<decimal?>("Price")
                        .HasColumnType("numeric");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uuid");

                    b.HasKey("HoaHTTID");

                    b.ToTable("Plans");
                });

            modelBuilder.Entity("EVChargingStation.CARC.Domain.LongLQ.Entities.Recommendation", b =>
                {
                    b.Property<Guid>("HoaHTTID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<decimal?>("ConfidenceScore")
                        .HasColumnType("numeric");

                    b.Property<Guid?>("ConnectorId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<Guid>("StationAnhDHVId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("SuggestedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("HoaHTTID");

                    b.HasIndex("ConnectorId");

                    b.HasIndex("StationAnhDHVId");

                    b.HasIndex("UserId");

                    b.ToTable("Recommendations");
                });

            modelBuilder.Entity("EVChargingStation.CARC.Domain.LongLQ.Entities.Report", b =>
                {
                    b.Property<Guid>("HoaHTTID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<string>("Data")
                        .HasColumnType("text");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("GeneratedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("PeriodEnd")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("PeriodStart")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Type")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("HoaHTTID");

                    b.HasIndex("UserId");

                    b.ToTable("Reports");
                });

            modelBuilder.Entity("EVChargingStation.CARC.Domain.LongLQ.Entities.ReservationLongLQ", b =>
                {
                    b.Property<Guid>("HoaHTTID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ConnectorId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<decimal?>("MinPowerKw")
                        .HasColumnType("numeric");

                    b.Property<int?>("PreferredConnectorType")
                        .HasColumnType("integer");

                    b.Property<int>("PriceType")
                        .HasColumnType("integer");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("StationAnhDHVId")
                        .HasColumnType("uuid");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("HoaHTTID");

                    b.HasIndex("ConnectorId");

                    b.HasIndex("StationAnhDHVId");

                    b.HasIndex("UserId");

                    b.ToTable("ReservationLongLQ");
                });

            modelBuilder.Entity("EVChargingStation.CARC.Domain.LongLQ.Entities.Session", b =>
                {
                    b.Property<Guid>("HoaHTTID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("ConnectorId")
                        .HasColumnType("uuid");

                    b.Property<decimal?>("Cost")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal?>("EnergyKwh")
                        .HasColumnType("numeric");

                    b.Property<Guid?>("InvoiceTruongNNId")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<Guid?>("ReservationLongLQId")
                        .HasColumnType("uuid");

                    b.Property<decimal?>("SocEnd")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("SocStart")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("HoaHTTID");

                    b.HasIndex("ConnectorId");

                    b.HasIndex("InvoiceTruongNNId");

                    b.HasIndex("ReservationLongLQId")
                        .IsUnique();

                    b.HasIndex("UserId");

                    b.ToTable("Sessions");
                });

            modelBuilder.Entity("EVChargingStation.CARC.Domain.LongLQ.Entities.StaffStation", b =>
                {
                    b.Property<Guid>("HoaHTTID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<Guid>("StaffUserId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("StationAnhDHVId")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uuid");

                    b.HasKey("HoaHTTID");

                    b.HasIndex("StaffUserId");

                    b.HasIndex("StationAnhDHVId");

                    b.ToTable("StaffStations");
                });

            modelBuilder.Entity("EVChargingStation.CARC.Domain.LongLQ.Entities.StationAnhDHV", b =>
                {
                    b.Property<Guid>("HoaHTTID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<Guid>("LocationId")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uuid");

                    b.HasKey("HoaHTTID");

                    b.HasIndex("LocationId");

                    b.ToTable("StationAnhDHV");
                });

            modelBuilder.Entity("EVChargingStation.CARC.Domain.LongLQ.Entities.User", b =>
                {
                    b.Property<Guid>("HoaHTTID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uuid");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<int?>("Gender")
                        .HasColumnType("integer");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("RefreshToken")
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)");

                    b.Property<DateTime?>("RefreshTokenExpiryTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Role")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uuid");

                    b.HasKey("HoaHTTID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("EVChargingStation.CARC.Domain.LongLQ.Entities.UserPlanHoaHTT", b =>
                {
                    b.Property<Guid>("HoaHTTID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<Guid>("PlanId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("HoaHTTID");

                    b.HasIndex("PlanId");

                    b.HasIndex("UserId");

                    b.ToTable("UserPlanHoaHTT");
                });

            modelBuilder.Entity("EVChargingStation.CARC.Domain.LongLQ.Entities.VehicleHuyPD", b =>
                {
                    b.Property<Guid>("HoaHTTID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("ConnectorType")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("LicensePlate")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("Make")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<int?>("Year")
                        .HasColumnType("integer");

                    b.HasKey("HoaHTTID");

                    b.HasIndex("UserId");

                    b.ToTable("VehicleHuyPD");
                });

            modelBuilder.Entity("EVChargingStation.CARC.Domain.LongLQ.Entities.Connector", b =>
                {
                    b.HasOne("EVChargingStation.CARC.Domain.LongLQ.Entities.StationAnhDHV", "StationAnhDHV")
                        .WithMany("Connectors")
                        .HasForeignKey("StationAnhDHVId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StationAnhDHV");
                });

            modelBuilder.Entity("EVChargingStation.CARC.Domain.LongLQ.Entities.InvoiceTruongNN", b =>
                {
                    b.HasOne("EVChargingStation.CARC.Domain.LongLQ.Entities.User", "User")
                        .WithMany("InvoiceTruongNN")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("EVChargingStation.CARC.Domain.LongLQ.Entities.Payment", b =>
                {
                    b.HasOne("EVChargingStation.CARC.Domain.LongLQ.Entities.InvoiceTruongNN", "InvoiceTruongNN")
                        .WithMany("Payments")
                        .HasForeignKey("InvoiceTruongNNId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("EVChargingStation.CARC.Domain.LongLQ.Entities.Session", "Session")
                        .WithMany("Payments")
                        .HasForeignKey("SessionId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("EVChargingStation.CARC.Domain.LongLQ.Entities.User", "User")
                        .WithMany("Payments")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InvoiceTruongNN");

                    b.Navigation("Session");

                    b.Navigation("User");
                });

            modelBuilder.Entity("EVChargingStation.CARC.Domain.LongLQ.Entities.Recommendation", b =>
                {
                    b.HasOne("EVChargingStation.CARC.Domain.LongLQ.Entities.Connector", "Connector")
                        .WithMany("Recommendations")
                        .HasForeignKey("ConnectorId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("EVChargingStation.CARC.Domain.LongLQ.Entities.StationAnhDHV", "StationAnhDHV")
                        .WithMany("Recommendations")
                        .HasForeignKey("StationAnhDHVId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EVChargingStation.CARC.Domain.LongLQ.Entities.User", "User")
                        .WithMany("Recommendations")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Connector");

                    b.Navigation("StationAnhDHV");

                    b.Navigation("User");
                });

            modelBuilder.Entity("EVChargingStation.CARC.Domain.LongLQ.Entities.Report", b =>
                {
                    b.HasOne("EVChargingStation.CARC.Domain.LongLQ.Entities.User", "User")
                        .WithMany("Reports")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("User");
                });

            modelBuilder.Entity("EVChargingStation.CARC.Domain.LongLQ.Entities.ReservationLongLQ", b =>
                {
                    b.HasOne("EVChargingStation.CARC.Domain.LongLQ.Entities.Connector", "Connector")
                        .WithMany("ReservationLongLQ")
                        .HasForeignKey("ConnectorId");

                    b.HasOne("EVChargingStation.CARC.Domain.LongLQ.Entities.StationAnhDHV", "StationAnhDHV")
                        .WithMany("ReservationLongLQ")
                        .HasForeignKey("StationAnhDHVId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EVChargingStation.CARC.Domain.LongLQ.Entities.User", "User")
                        .WithMany("ReservationLongLQ")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Connector");

                    b.Navigation("StationAnhDHV");

                    b.Navigation("User");
                });

            modelBuilder.Entity("EVChargingStation.CARC.Domain.LongLQ.Entities.Session", b =>
                {
                    b.HasOne("EVChargingStation.CARC.Domain.LongLQ.Entities.Connector", "Connector")
                        .WithMany("Sessions")
                        .HasForeignKey("ConnectorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EVChargingStation.CARC.Domain.LongLQ.Entities.InvoiceTruongNN", "InvoiceTruongNN")
                        .WithMany("Sessions")
                        .HasForeignKey("InvoiceTruongNNId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("EVChargingStation.CARC.Domain.LongLQ.Entities.ReservationLongLQ", "ReservationLongLQ")
                        .WithOne("Session")
                        .HasForeignKey("EVChargingStation.CARC.Domain.LongLQ.Entities.Session", "ReservationLongLQId");

                    b.HasOne("EVChargingStation.CARC.Domain.LongLQ.Entities.User", "User")
                        .WithMany("Sessions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Connector");

                    b.Navigation("InvoiceTruongNN");

                    b.Navigation("ReservationLongLQ");

                    b.Navigation("User");
                });

            modelBuilder.Entity("EVChargingStation.CARC.Domain.LongLQ.Entities.StaffStation", b =>
                {
                    b.HasOne("EVChargingStation.CARC.Domain.LongLQ.Entities.User", "StaffUser")
                        .WithMany("StaffStations")
                        .HasForeignKey("StaffUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EVChargingStation.CARC.Domain.LongLQ.Entities.StationAnhDHV", "StationAnhDHV")
                        .WithMany("StaffStations")
                        .HasForeignKey("StationAnhDHVId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StaffUser");

                    b.Navigation("StationAnhDHV");
                });

            modelBuilder.Entity("EVChargingStation.CARC.Domain.LongLQ.Entities.StationAnhDHV", b =>
                {
                    b.HasOne("EVChargingStation.CARC.Domain.LongLQ.Entities.Location", "Location")
                        .WithMany("StationAnhDHV")
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Location");
                });

            modelBuilder.Entity("EVChargingStation.CARC.Domain.LongLQ.Entities.UserPlanHoaHTT", b =>
                {
                    b.HasOne("EVChargingStation.CARC.Domain.LongLQ.Entities.Plan", "Plan")
                        .WithMany("UserPlanHoaHTT")
                        .HasForeignKey("PlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EVChargingStation.CARC.Domain.LongLQ.Entities.User", "User")
                        .WithMany("UserPlanHoaHTT")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Plan");

                    b.Navigation("User");
                });

            modelBuilder.Entity("EVChargingStation.CARC.Domain.LongLQ.Entities.VehicleHuyPD", b =>
                {
                    b.HasOne("EVChargingStation.CARC.Domain.LongLQ.Entities.User", "User")
                        .WithMany("VehicleHuyPD")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("EVChargingStation.CARC.Domain.LongLQ.Entities.Connector", b =>
                {
                    b.Navigation("Recommendations");

                    b.Navigation("ReservationLongLQ");

                    b.Navigation("Sessions");
                });

            modelBuilder.Entity("EVChargingStation.CARC.Domain.LongLQ.Entities.InvoiceTruongNN", b =>
                {
                    b.Navigation("Payments");

                    b.Navigation("Sessions");
                });

            modelBuilder.Entity("EVChargingStation.CARC.Domain.LongLQ.Entities.Location", b =>
                {
                    b.Navigation("StationAnhDHV");
                });

            modelBuilder.Entity("EVChargingStation.CARC.Domain.LongLQ.Entities.Plan", b =>
                {
                    b.Navigation("UserPlanHoaHTT");
                });

            modelBuilder.Entity("EVChargingStation.CARC.Domain.LongLQ.Entities.ReservationLongLQ", b =>
                {
                    b.Navigation("Session");
                });

            modelBuilder.Entity("EVChargingStation.CARC.Domain.LongLQ.Entities.Session", b =>
                {
                    b.Navigation("Payments");
                });

            modelBuilder.Entity("EVChargingStation.CARC.Domain.LongLQ.Entities.StationAnhDHV", b =>
                {
                    b.Navigation("Connectors");

                    b.Navigation("Recommendations");

                    b.Navigation("ReservationLongLQ");

                    b.Navigation("StaffStations");
                });

            modelBuilder.Entity("EVChargingStation.CARC.Domain.LongLQ.Entities.User", b =>
                {
                    b.Navigation("InvoiceTruongNN");

                    b.Navigation("Payments");

                    b.Navigation("Recommendations");

                    b.Navigation("Reports");

                    b.Navigation("ReservationLongLQ");

                    b.Navigation("Sessions");

                    b.Navigation("StaffStations");

                    b.Navigation("UserPlanHoaHTT");

                    b.Navigation("VehicleHuyPD");
                });
#pragma warning restore 612, 618
        }
    }
}
